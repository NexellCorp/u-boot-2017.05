* Nexell Nxp3220 Clock and PLL

The nxp3220 clock controller generates and supplies clock to various
controllers within the SoC.

Required Properties:

- compatible: should be "nexell,nxp3220-clock-pll",
			"nexell,nxp3220-cmu-src",
			"nexell,nxp3220-cmu-sys"
			"nexell,nxp3220-cmu-mm"
			"nexell,nxp3220-cmu-usb"

- reg: physical base address of the controller and length of memory mapped
  region.
- #clock-cells: should be 1.
- #reset-cells: should be 1.
- clk-init-frequency: initial clock setting at boot time.
			<'clock_id' 'frequency' 'en/disable'>
- bus-init-frequency: initial bus clock(axi, ahb, apb) setting at boot time.
			<'clock_id' 'frequency' 'en/disable'>


Example: Clock controller node:

	clock_pll: clock-src@27020000 {
		compatible = "nexell,nxp3220-clock-pll" ;
		reg = <0x27020000 0x10000>;
		u-boot,dm-pre-reloc;
		#clock-cells = <1>;
		clocks = <&fin_pll>;
		clock-names = "xxti";
	};

	clock_src: clock-src@27000000 {
		compatible = "nexell,nxp3220-cmu-src" ;
		reg = <0x27000000 0x10000>;
		u-boot,dm-pre-reloc;
		#clock-cells = <1>;
		clocks = <&clock_pll 0>;
		clock-names = "pll";
	};

Example: UART controller node that consumes the clock generated by the clock
  controller:
	uart0: serial@20400000 {
		compatible = "snps,dw-apb-uart";
		reg = <0x20400000 0x1000>;
		reg-shift = <2>;
		reg-io-width = <4>;
		clocks = <&clock_sys UART_0_CORE_CLK>,
		      <&clock_sys UART_0_APB_CLK >;
		clock-names = "baudclk", "apb_pclk";
		status = "disabled";
	};

	clock_sys: clock-sys@27010000 {
		clk-init-frequency = <UART_2_CORE_CLK 100000000 1>,
				     <UART_2_APB_CLK 100000000 1>,
				     <TIMER_0_APB_CLK 100000000 1>,
				     <TIMER_0_TCLK0_CLK 100000000 1>,
				     <TIMER_0_TCLK1_CLK 100000000 1>;
	};

